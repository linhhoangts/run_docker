version: '3.8'

volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs

networks:
  kong_network:
    driver: bridge
    external: true

services:
  kong_migrations:
    image: &kong_image kong:2.8.0-alpine
    container_name: kong_migrations
    command: kong migrations bootstrap
    environment: &kong_env
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: db
      KONG_PG_DATABASE: 'kong'
      KONG_PG_USER: 'postgres'
      KONG_PG_PASSWORD: 'postgres'
    restart: 'on-failure'
    networks:
      - 'kong_network'
    depends_on:
      - db

  kong_migrations_up:
    image: *kong_image
    container_name: kong_migrations_up
    command: kong migrations up && kong migrations finish
    environment:
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: db
      KONG_PG_DATABASE: 'kong'
      KONG_PG_USER: 'postgres'
      KONG_PG_PASSWORD: 'postgres'
    restart: 'on-failure'
    networks:
      - 'kong_network'
    depends_on:
      - db

  kong:
    image: *kong_image
    container_name: kong
    user: root
    restart: 'on-failure:5'
    read_only: true
    environment:
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: db
      KONG_PG_DATABASE: 'kong'
      KONG_PG_USER: 'postgres'
      KONG_PG_PASSWORD: 'postgres'
      KONG_PROXY_ACCESS_LOG: '/dev/stdout'
      KONG_ADMIN_ACCESS_LOG: '/dev/stdout'
      KONG_PROXY_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_LISTEN: '0.0.0.0:8001, 0.0.0.0:8444 ssl'
      KONG_DECLARATIVE_CONFIG: '/opt/kong/kong.yaml'
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
    expose:
     - '8000'
     - '8443'
     - '8001'
     - '8444'
    ports:
     - '8000:8000'
     - '8443:8443'
     - '8001:8001'
     - '8444:8444'
    healthcheck:
      test: ['CMD', 'kong', 'health']
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    networks:
      - 'kong_network'

  db:
    image: postgres:9.5
    container_name: kong_db
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'kong'
      PGDATA: '/var/lib/postgresql/data/pgdata'
    networks:
      - 'kong_network'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 30s
      timeout: 30s
      retries: 3
    restart: 'on-failure'
    stdin_open: true
    tty: true
    volumes:
      - ./kong_data:/var/lib/postgresql/data
